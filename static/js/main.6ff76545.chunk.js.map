{"version":3,"sources":["components/App.js","index.js"],"names":["Search","_ref","searchCountry","onChange","react_default","a","createElement","value","ShowView","_ref2","handleShowView","state","onClick","Filter","_ref3","nations","nation","capital","_useState","useState","_useState2","Object","slicedToArray","weatherData","setWeatherData","useEffect","params","access_Key","query","concat","axios","get","then","response","data","current","length","name","population","languages","map","lang","key","src","flag","alt","height","width","App_Weather","App_ShowView","Weather","_ref4","undefined","console","log","temperature","weather_icons","weather_descriptions","wind_speed","wind_dir","App","_useState3","_useState4","setSearchCountry","_useState5","_useState6","countries","setCountries","toConsumableArray","filter","country","toLowerCase","includes","findIndex","c","App_Search","event","target","App_Filter","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6ff76545.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// Search field for specific country\nconst Search = ({searchCountry, onChange}) => {\n    \n    return (\n        <div>\n            find countries <input value={searchCountry}\n                            onChange={onChange}/>\n        </div>\n    )\n}\n\n// Display result for selected country\nconst ShowView = ({handleShowView, state}) => {\n    return (\n        <button onClick={() => handleShowView(state)}>\n            show\n        </button>\n    )\n}\n\n// Display results for filtered country\nconst Filter = ({handleShowView, nations, nation, capital}) => {  \n    const [weatherData, setWeatherData] = useState(null)\n\n    useEffect(() => {\n        const params = {\n            access_Key: 'c0783766116c141658a739df594e451d',\n            query: `${capital}`\n        }\n\n        axios.get('http://api.weatherstack.com/current', {params})\n            .then(response => {\n                setWeatherData(response.data.current)\n            })\n\n    },[capital])\n    \n    if(nations.length > 10) {\n        \n        return(             \n            <div>                \n                Too many matches. specify another filter                \n            </div>\n        )\n    } else if(nations.length === 1) {            \n\n        return (            \n            <div>\n                <h1>\n                    {nation.name}                                                            \n                </h1>\n                <p>capital {nation.capital}\n                    <br></br>\n                    population {nation.population}</p>\n                <h3>languages</h3>    \n                <ul>\n                    {nation.languages.map(lang => <li key={lang.name}>{lang.name}</li>)}       \n                </ul>\n                <img src={nation.flag} alt={`${nation.name}'s flag'`} height={'100'} width={'120'}/>   \n                <h1>Weather in {nation.capital}</h1>                \n                <Weather weatherData={weatherData}/>\n            </div>\n        )\n    }\n    return (\n        <div>\n            {nations.map(state => <div key={state}>{state} <ShowView handleShowView={handleShowView} state={state}/></div>)} \n        </div>\n    )\n}\n\nconst Weather = ({ weatherData }) => {\n    if (weatherData === null || weatherData === undefined) {\n        return null\n    }\n\n    return (\n        <div>\n            <div>\n            {console.log('weta: ', weatherData)}\n            </div>\n            <div>\n                Temperature: {weatherData.temperature} degrees Celcius\n            </div>\n            <div>\n                <img src={weatherData.weather_icons} alt={weatherData.weather_descriptions}/>\n            </div>\n            <div>\n                Wind: {weatherData.wind_speed} kph direction {weatherData.wind_dir}\n            </div>\n        </div>\n    )\n\n}\n\nconst App = () => {\n\n    const [searchCountry, setSearchCountry] = useState('')\n    const [countries, setCountries] = useState([])    \n    let capital = ''\n\n    const handleSearch = (event) => {\n        setSearchCountry(event.target.value)\n    }\n    const handleShowView = (state) => {\n        setSearchCountry(state)\n        \n    } \n    const nations = [...countries].map(state => state.name).filter(country =>\n        country.toLowerCase().includes(searchCountry.toLowerCase()) && searchCountry.length > 0)\n       \n   const nation = countries[countries.findIndex(c => c.name.toLowerCase().includes(searchCountry.toLowerCase()) && searchCountry.length > 0)]\n\n   if (nation !== undefined && nations.length === 1) {\n    capital = countries[countries.findIndex(c => c.name.toLowerCase().includes(searchCountry.toLowerCase()) && searchCountry.length > 0)].capital\n       \n   }\n\n    const hook = () => {\n     \n        axios\n            .get('https://restcountries.eu/rest/v2/all')\n            .then(response => {                              \n                setCountries(response.data)                   \n            })\n    }\n    useEffect(hook, [])     \n    \n    return(\n        <div>            \n            <Search searchCountry={searchCountry} onChange={handleSearch}/>\n            <Filter handleShowView={handleShowView} nations={nations} nation={nation} capital={capital}/>\n        </div>\n    )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}